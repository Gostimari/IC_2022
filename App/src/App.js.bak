/* src/App.js */
import React, { useEffect, useState } from 'react'
import { Amplify, API, graphqlOperation } from 'aws-amplify'
import { getBoardZolertia1, listBoardZolertia1S} from './graphql/queries'
import {add, createBoardZolertia1, createIcapp, createTodo, deleteTodo, updateIcapp, updateTodo} from './graphql/mutations'

import awsExports from "./aws-exports";

import { withAuthenticator, Button, Heading } from '@aws-amplify/ui-react';
import '@aws-amplify/ui-react/styles.css';

Amplify.configure(awsExports);

const App = ({ signOut, user }) => {
  const [todos, setTodos] = useState([])

  useEffect(() => {
    RegaConfigure()
  }, [])


  async function fetchTodos() {
    try {
      const todoData = await API.graphql(graphqlOperation(listBoardZolertia1S))
      const todos = todoData.data.listBoardZolertia1S.items
      setTodos(todos)
    } catch (err) { console.log('error fetching todos') }
  }
 
  async function RegaConfigure() {
    try {
      const rega = { id: 'f9660efe-c831-4088-929f-2ebc1eb9b260', name: 'Rega', description: 0 }
      await API.graphql(graphqlOperation(updateTodo, {input: rega}))
    } catch (err) {
      console.log('error creating todo:', err)
    }
  }

  async function RegaON() {
    try {
      const regaon = { id: 'f9660efe-c831-4088-929f-2ebc1eb9b260', name: 'Rega', description: 1 }
      await API.graphql(graphqlOperation(updateTodo, {input: regaon}))
    } catch (err) {
      console.log('error creating todo:', err)
    }
  }

  async function RegaOFF() {
    try {
      const regaoff = { id: 'f9660efe-c831-4088-929f-2ebc1eb9b260', name: 'Rega', description: 0 }
      await API.graphql(graphqlOperation(updateTodo, {input: regaoff}))
    } catch (err) {
      console.log('error creating todo:', err)
    }
  }

  return (
    <>
    {
    <div style={styles.container}>
      <h2>myAgriculture</h2>
      <Heading level={1}>Hello There,</Heading>

      <button style={styles.button} onClick={fetchTodos}>List Data</button>
      <button style={styles.button} onClick={RegaON}>Irrigation ON</button>
      <button style={styles.button} onClick={RegaOFF}>Irrigation OFF</button>
      {
        todos.map((todo, index) => (
          <div key={todo.iteracao ? todo.Board : index} style={styles.todo}>
            <p style={styles.todoName}>{todo.Board}</p>
            <p style={styles.todoDescription}>{"Soil "}{todo.Soil}</p>
            <p style={styles.todoDescription}>{"Light "}{todo.Light}</p>
            <p style={styles.todoDescription}>{"Uptime "}{todo.Uptime}</p>
          </div>
        ))
      }
    </div>
    }
    <Button onClick={signOut}>Sign out</Button>
    </>
  )
}

const styles = {
  container: { width: 400, margin: '0 auto', display: 'flex', flexDirection: 'column', justifyContent: 'center', padding: 20 },
  todo: {  marginBottom: 15 },
  input: { border: 'none', backgroundColor: '#ddd', marginBottom: 10, padding: 8, fontSize: 18 },
  todoName: { fontSize: 20, fontWeight: 'bold' },
  todoDescription: { marginBottom: 0 },
  button: { backgroundColor: 'black', color: 'white', outline: 'none', fontSize: 18, padding: '12px 0px' }
}

export default withAuthenticator(App);
